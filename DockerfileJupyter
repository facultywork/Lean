#
#    LEAN Jupyter Docker Container 20180424
#

# Use base system for cleaning up wayward processes
FROM quantconnect/lean:foundation

MAINTAINER QuantConnect <contact@quantconnect.com>

# Install Tini
RUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini && \
    echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini" | sha256sum -c - && \
    mv tini /usr/local/bin/tini && \
    chmod +x /usr/local/bin/tini

#Install Jupyter and other packages
RUN conda install -y jupyter && \
    conda install -y jsonschema plotly quandl && \
    conda clean -y --all

#Install ICSharp (Jupyter C# Kernel)
RUN wget https://s3.amazonaws.com/data.quantconnect.com/builds/iCSharp/iCSharp.Kernel.zip && \
    unzip iCSharp.Kernel.zip && rm -irf iCSharp.Kernel.zip && cd icsharp && \
    jupyter kernelspec install kernel-spec --name=csharp && cd ..

#Install Python.NET
RUN apt-get update && apt-get install -y clang git libglib2.0-dev
RUN git clone https://github.com/QuantConnect/pythonnet && \
    cd pythonnet && cp src/runtime/interop36.cs src/runtime/interop36m.cs && \
    python setup.py install && cd .. && rm -irf pythonnet

# Setting some environment variables
ENV WORK /root/Lean/Launcher/bin/Debug/
ENV PYTHONPATH=${WORK}:${PYTHONPATH}

# Copy Lean files to convenient locations
COPY ./Launcher/bin/Debug/ ${WORK}
RUN rm -irf ${WORK}/*Python* && \
    find ${WORK} -type f -not -name '*.dll' -not -name '*.ipynb' -not -name '*.csx' -delete && \
    echo "{ \"data-folder\": \"/home/Data/\", \"composer-dll-directory\": \"$WORK\" }" > ${WORK}/config.json 

EXPOSE 8866
WORKDIR $WORK

ENTRYPOINT [ "/usr/local/bin/tini", "--" ]
CMD jupyter notebook --ip='*' --port=8866 --no-browser --allow-root

# Usage:
# docker build -t quantconnect/lean:foundation -f DockerfileLeanFoundation .
# docker build -t quantconnect/jupyter -f DockerfileJupyter .

# WORKING
# docker run -it -p 8866:8866 -v $(pwd)/Data:/home/Data:rw quantconnect/jupyter
# Keep Notebooks in /Launcher/bin/Debug/ and rebuild image
# Put data in Equity or Fx and then try CFD

# docker run -it -p 8866:8866 -v $(pwd)/Data:/home/Data:rw -v $(pwd)/Jupyter/bin/Debug:/root/Lean/Launcher/bin/Debug:rw quantconnect/jupyter

# docker run -it -p 8866:8866 -v $(pwd)/Data:/home/Data:rw -v $(pwd)/Launcher/bin/Debug:/root/Lean/Launcher/bin/Debug:rw quantconnect/jupyter
# docker run -it -p 8866:8866 -v $(pwd)/Launcher/bin/Debug:/root/Lean/Launcher/bin/Debug:rw -v $(pwd)/Data:/home/Data:rw quantconnect/jupyter


# BAD
# docker run -it --rm -p 8866:8866 -v $(pwd)/Data:/home/Data:rw quantconnect/jupyter
# docker run -it -p 8866:8866 -v $(pwd)/Data:/root/Lean/Data:rw -v $(pwd)/Jupyter:/root/Lean/bin/Debug:rw quantconnect/jupyter
# docker run -it -p 8866:8866 -v $(pwd)/Data:/root/Lean/Data:rw -v $(pwd)/Launcher/bin/Debug/:/root/Lean/Launcher/bin/Debug:rw quantconnect/jupyter
# docker run -it -p 8866:8866 -v $(pwd)/Data:/root/Lean/Data:rw -v $(pwd)/Launcher/bin/Debug:/root/Lean/Launcher/bin/Debug:rw quantconnect/jupyter
# docker run -it -p 8866:8866 -v $(pwd)/Data:/root/Lean/Data:rw -v $(pwd)/Launcher/bin/Debug:/root/Lean/Launcher/bin/Debug:rw -v $(pwd)/Jupyter:/root/Lean/bin/Debug:rw quantconnect/jupyter
# docker run -it -p 8866:8866 -v $(pwd)/Data:/root/Lean/Data:rw quantconnect/jupyter
# docker run -it -p 8866:8866 -v $(pwd)/Data:/home/Data:rw -v $(pwd)/Jupyter:/root/Lean/Launcher/bin/Debug:rw quantconnect/jupyter

